package com.gamagerestaurant.model;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import javax.persistence.*;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.List;

@Entity
@Data
@Table(name = "reservation")
@AllArgsConstructor
@NoArgsConstructor
public class Reservation {

    @Id
    //define Id as primary key
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    //autogenerated value
    @Basic(optional = false)
    //not null
    @Column(name = "id")
    //map id attribute to the column name of the customer table
    private Integer id;

    @Column(name="cname")
    @Basic(optional = false)
    private String cname;

    @Column(name="cmobile")
    @Basic(optional = false)
    private String cmobile;

    @Column(name="reservationno")
    @Basic(optional = false)
    private String reservationno;

    @Column(name="totalamount")
    @Basic(optional = false)
    private BigDecimal totalamount;

    @Column(name="paidamount")
    @Basic(optional = false)
    private BigDecimal paidamount;

    @Column(name="balanceamount")
    @Basic(optional = false)
    private BigDecimal balanceamount;


    @Column(name="currentamount")
    @Basic(optional = false)
    private BigDecimal currentamount;

    @Column(name="addeddate")
    @Basic(optional = false)
    private LocalDate addeddate;

    @Column(name="description")
    @Basic(optional = true)
    private String description;

    @Column(name="discountratio")
    @Basic(optional = false)
    private BigDecimal discountratio;


    @Column(name="lastprice")
    @Basic(optional = false)
    private BigDecimal lastprice;

    @Column(name = "deliveryaddress")
    @Basic(optional = true)
    private String deliveryaddress;

    @Column(name = "servicecharge")
    @Basic(optional = false)
    private BigDecimal servicecharge;

    @ManyToOne(optional = false, fetch = FetchType.EAGER)
    @JoinColumn(name = "reservationstatus_id", referencedColumnName = "id")
    private Reservationstatus reservationstatus_id;

    @ManyToOne(optional = true, fetch = FetchType.EAGER)
    @JoinColumn(name = "customer_id", referencedColumnName = "id")
    private Customer customer_id;


    @ManyToOne(optional = true, fetch = FetchType.EAGER)
    @JoinColumn(name = "cpmethod_id", referencedColumnName = "id")
    private Cpmethod cpmethod_id;

    @OneToMany(cascade =CascadeType.ALL,mappedBy = "reservation_id" ,fetch = FetchType.LAZY, orphanRemoval = true)
    private List<ReservationHasService> reservationHasServiceList;


    public Reservation(String reservationno){
                this.reservationno=reservationno;
    }

    public Reservation(Integer id,String reservationno,String cmobile){
        this.id=id;
        this.reservationno=reservationno;
        this.cmobile=cmobile;

    }

    public  Reservation(Integer id){
        this.id=id;
    }
}

